{"version":3,"sources":["webpack:///./src/views/dailyRec.vue?3e88","webpack:///./src/views/dailyRec.vue","webpack:///./src/views/dailyRec.vue?c638","webpack:///./src/views/dailyRec.vue?c1a0"],"names":["class","width","height","color","calendarColor","window","Date","getDate","musicList","dailySongs","colVisible","columns","dataSource","visible","downloadModalVisible","default","songsUrlObjArr","item","index","key","type","name","level","id","checked","for","musicQuality","buttons","confirmDownload","ref","tracks","map","defaultListName","setup","store","route","state","currentMusicObj","likeList","commonToast","title","dataIndex","render","text","join","getFullYear","String","getMonth","padStart","newV","console","log","getRec","Promise","resolve","reject","t","now","then","res","code","data","immediate","query","length","commit","JSON","parse","stringify","currentPlayList","dispatch","getLikeList","ids","initPageData","getters","getTheme","tryDownloadMusic","findResult","find","url","collectMusic","like","all","res1","res2","success","playTime","__scopeId"],"mappings":"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","file":"js/chunk-502822ef.0ec3014d.js","sourcesContent":["export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./dailyRec.vue?vue&type=style&index=0&id=383dcf5c&scoped=true&lang=scss\"","<template>\r\n    <div class=\"px-5 py-4\">\r\n        <div class=\"dailyRec ps-3 h-100 overflow-scroll hideScrollBar\">\r\n            <div class=\"m-5 d-flex\">\r\n                <div class=\"position-relative calendarBox\">\r\n                    <CalendarIcon width=\"90\" height=\"90\" :color=\"calendarColor\" />\r\n                    <div class=\"dateText fw-bold position-absolute start-50 fs-1 translate-middle\">\r\n                        {{ new window.Date().getDate() }}\r\n                    </div>\r\n                </div>\r\n                <div class=\"ms-5 d-flex flex-column justify-content-center\">\r\n                    <div class=\"fs-1\">每日歌曲推荐</div>\r\n                    <div class=\"text-muted\">根据你的音乐口味生成，每天6:00更新</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"d-flex mb-4 ms-5\">\r\n                <PlayAllListBtn :musicList=\"dailySongs\" />\r\n                <div @click=\"colVisible = true\" class=\"collectList ms-3 rounded-pill px-5 border d-flex align-items-center cursor-pointer hover-btn\">\r\n                    <CollectListIcon width=\"20\" height=\"20\" />\r\n                    <span class=\"ms-2\">收藏全部</span>\r\n                </div>\r\n            </div>\r\n            <div class=\"border-top mb-5\">\r\n                <MusicList :columns=\"columns\" :dataSource=\"dailySongs\" />\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <CommonModal v-model:visible=\"downloadModalVisible\">\r\n        <template #default>\r\n            <div class=\"d-flex justify-content-center\">\r\n                <div v-for=\"(item, index) in songsUrlObjArr\" :key=\"index\" class=\"d-flex align-items-center cursor-pointer\">\r\n                    <input type=\"radio\" :name=\"item.level\" :id=\"item.level\" v-model=\"item.checked\" :checked=\"item.checked\" />\r\n                    <label class=\"ms-3\" :for=\"item.level\">{{ musicQuality(item.level) }}</label>\r\n                </div>\r\n            </div>\r\n        </template>\r\n        <template #buttons>\r\n            <div class=\"d-flex justify-content-center\">\r\n                <div @click=\"confirmDownload\" class=\"okBtn cursor-pointer d-flex justify-content-center align-items-center\">\r\n                    确定\r\n                </div>\r\n                <div\r\n                    @click=\"downloadModalVisible = false\"\r\n                    class=\"okBtn cancelBtn ms-4 rounded-pill text-muted border cursor-pointer d-flex justify-content-center align-items-center\"\r\n                >\r\n                    取消\r\n                </div>\r\n            </div>\r\n        </template>\r\n    </CommonModal>\r\n    <CommonToast ref=\"commonToast\" />\r\n    <CollectionListModal :tracks=\"dailySongs.map(item => item.id)\" v-model:visible=\"colVisible\" :defaultListName=\"defaultListName\" />\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { computed, defineComponent, reactive, ref, toRefs, watch } from \"vue\";\r\nimport { getRecommendSongsApi, getSongDetail, getSongUrl, likeMusic } from \"@/api/discover\";\r\nimport { getLikeList as getLikeListApi } from \"@/api/login\";\r\nimport { playTime, addHaveUrl } from \"@/hooks/useFilters\";\r\nimport { useStore } from \"vuex\";\r\nimport { downloadMusic as downloadMusicFun } from \"@/utils/file\";\r\nimport { musicQuality } from \"@/hooks/useFilters\";\r\nimport { AxiosResponseProps } from \"@/utils/request\";\r\nimport { useRoute } from \"vue-router\";\r\nexport default defineComponent({\r\n    setup() {\r\n        const store = useStore();\r\n        const route = useRoute();\r\n        const state = reactive({\r\n            dailySongs: [],\r\n            downloadModalVisible: false,\r\n            songsUrlObjArr: [],\r\n            currentMusicObj: {},\r\n            likeList: [],\r\n            commonToast: ref(null),\r\n            colVisible: false,\r\n            columns: [\r\n                {\r\n                    title: \"音乐标题\",\r\n                    dataIndex: \"name\",\r\n                },\r\n                {\r\n                    title: \"歌手\",\r\n                    dataIndex: \"ar\",\r\n                    render: text => {\r\n                        return text.map(item => item.name).join(\"、\");\r\n                    },\r\n                },\r\n                {\r\n                    title: \"专辑\",\r\n                    dataIndex: \"al\",\r\n                    render: text => {\r\n                        return text.name;\r\n                    },\r\n                },\r\n                {\r\n                    title: \"时长\",\r\n                    dataIndex: \"dt\",\r\n                    render: text => {\r\n                        return playTime(text);\r\n                    },\r\n                },\r\n            ],\r\n            defaultListName: `每日歌曲推荐(${new Date().getFullYear()}.${String(new Date().getMonth() + 1).padStart(2, \"0\")}.${String(\r\n                new Date().getDate()\r\n            ).padStart(2, \"0\")})`,\r\n        });\r\n        watch(\r\n            () => state.songsUrlObjArr,\r\n            newV => {\r\n                console.log(newV);\r\n            }\r\n        );\r\n        const getRec = () => {\r\n            return new Promise((resolve, reject) => {\r\n                getRecommendSongsApi({ t: Date.now() }).then(async (res: AxiosResponseProps) => {\r\n                    if (res.code === 200) {\r\n                        state.dailySongs = await addHaveUrl(res.data.dailySongs);\r\n                        const immediate = route.query.immediate;\r\n                        if (immediate && res?.data?.dailySongs?.length) {\r\n                            store.commit(\"changeCurrentMusicDetail\", res.data.dailySongs[0]);\r\n                            store.commit(\"changeCurrentPlayList\", [\r\n                                ...JSON.parse(JSON.stringify(res.data.dailySongs)),\r\n                                ...store.state.currentPlayList,\r\n                            ]);\r\n                            store.dispatch(\"getCurrentMusicUrlInfo\", { id: res.data.dailySongs[0].id });\r\n                        }\r\n                        resolve(res);\r\n                    }\r\n                });\r\n            });\r\n        };\r\n        const getLikeList: () => Promise<AxiosResponseProps> = () => {\r\n            return new Promise((resolve, reject) => {\r\n                getLikeListApi().then((res: any) => {\r\n                    if (res.code === 200) {\r\n                        state.likeList = res.ids;\r\n                        resolve(res);\r\n                    }\r\n                });\r\n            });\r\n        };\r\n        const initPageData = () => {\r\n            getRec();\r\n            getLikeList();\r\n        };\r\n        initPageData();\r\n        const calendarColor = computed(() =>\r\n            store.getters.getTheme === \"primaryTheme\" ? \"#ec4141\" : store.getters.getTheme === \"darkTheme\" ? \"#212529\" : \"#50c475\"\r\n        );\r\n        const tryDownloadMusic = item => {\r\n            state.currentMusicObj = item;\r\n            getSongUrl(item.id).then((res: AxiosResponseProps) => {\r\n                if (res.code === 200) {\r\n                    if (res.data.length === 1) {\r\n                        state.songsUrlObjArr = res.data.map(item => ({ ...item, checked: true }));\r\n                    } else {\r\n                        state.songsUrlObjArr = res.data.map(item => ({ ...item, checked: false }));\r\n                    }\r\n                    state.downloadModalVisible = true;\r\n                }\r\n            });\r\n        };\r\n        const confirmDownload = () => {\r\n            console.log(state.songsUrlObjArr);\r\n            let findResult = state.songsUrlObjArr.find(item => item.checked);\r\n            if (findResult) {\r\n                downloadMusicFun(findResult.url, (state.currentMusicObj as { name: string }).name);\r\n            }\r\n        };\r\n        const collectMusic = (item, like) => {\r\n            likeMusic({ id: item.id, like }).then((res: any) => {\r\n                if (res.code === 200) {\r\n                    Promise.all([getRec(), getLikeList()]).then(([res1, res2]: [AxiosResponseProps, AxiosResponseProps]) => {\r\n                        if (res1.code === 200 && res2.code === 200) {\r\n                            state.commonToast.success(like ? \"已添加到我喜欢的音乐\" : \"取消喜欢成功\");\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        };\r\n        return {\r\n            ...toRefs(state),\r\n            playTime,\r\n            calendarColor,\r\n            window,\r\n            tryDownloadMusic,\r\n            musicQuality,\r\n            confirmDownload,\r\n            collectMusic,\r\n        };\r\n    },\r\n});\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n.primaryTheme {\r\n    .dateText {\r\n        color: $primary;\r\n    }\r\n    .playAllBtn {\r\n        background-color: $primary;\r\n    }\r\n    .okBtn {\r\n        background-color: $primary;\r\n    }\r\n}\r\n.darkTheme {\r\n    .dateText {\r\n        color: $dark;\r\n    }\r\n    .okBtn {\r\n        background-color: $dark;\r\n    }\r\n}\r\n.freeTheme {\r\n    .dateText {\r\n        color: $free;\r\n    }\r\n    .okBtn {\r\n        background-color: $free;\r\n    }\r\n}\r\n.dailyRec {\r\n    .calendarBox {\r\n        width: 90px;\r\n        height: 90px;\r\n        box-sizing: border-box;\r\n        .dateText {\r\n            top: 60%;\r\n        }\r\n    }\r\n    .hover-btn {\r\n        &:hover {\r\n            background-color: rgba($color: #000000, $alpha: 0.1) !important;\r\n        }\r\n    }\r\n    .collectList {\r\n        height: 36px;\r\n    }\r\n}\r\n.okBtn {\r\n    width: 106px;\r\n    height: 38px;\r\n    border-radius: 20px;\r\n    color: #fff;\r\n    &:hover {\r\n        filter: invert(0.08);\r\n    }\r\n}\r\n.cancelBtn {\r\n    background-color: #fff !important;\r\n}\r\n</style>\r\n","\r\nimport { computed, defineComponent, reactive, ref, toRefs, watch } from \"vue\";\r\nimport { getRecommendSongsApi, getSongDetail, getSongUrl, likeMusic } from \"@/api/discover\";\r\nimport { getLikeList as getLikeListApi } from \"@/api/login\";\r\nimport { playTime, addHaveUrl } from \"@/hooks/useFilters\";\r\nimport { useStore } from \"vuex\";\r\nimport { downloadMusic as downloadMusicFun } from \"@/utils/file\";\r\nimport { musicQuality } from \"@/hooks/useFilters\";\r\nimport { AxiosResponseProps } from \"@/utils/request\";\r\nimport { useRoute } from \"vue-router\";\r\nexport default defineComponent({\r\n    setup() {\r\n        const store = useStore();\r\n        const route = useRoute();\r\n        const state = reactive({\r\n            dailySongs: [],\r\n            downloadModalVisible: false,\r\n            songsUrlObjArr: [],\r\n            currentMusicObj: {},\r\n            likeList: [],\r\n            commonToast: ref(null),\r\n            colVisible: false,\r\n            columns: [\r\n                {\r\n                    title: \"音乐标题\",\r\n                    dataIndex: \"name\",\r\n                },\r\n                {\r\n                    title: \"歌手\",\r\n                    dataIndex: \"ar\",\r\n                    render: text => {\r\n                        return text.map(item => item.name).join(\"、\");\r\n                    },\r\n                },\r\n                {\r\n                    title: \"专辑\",\r\n                    dataIndex: \"al\",\r\n                    render: text => {\r\n                        return text.name;\r\n                    },\r\n                },\r\n                {\r\n                    title: \"时长\",\r\n                    dataIndex: \"dt\",\r\n                    render: text => {\r\n                        return playTime(text);\r\n                    },\r\n                },\r\n            ],\r\n            defaultListName: `每日歌曲推荐(${new Date().getFullYear()}.${String(new Date().getMonth() + 1).padStart(2, \"0\")}.${String(\r\n                new Date().getDate()\r\n            ).padStart(2, \"0\")})`,\r\n        });\r\n        watch(\r\n            () => state.songsUrlObjArr,\r\n            newV => {\r\n                console.log(newV);\r\n            }\r\n        );\r\n        const getRec = () => {\r\n            return new Promise((resolve, reject) => {\r\n                getRecommendSongsApi({ t: Date.now() }).then(async (res: AxiosResponseProps) => {\r\n                    if (res.code === 200) {\r\n                        state.dailySongs = await addHaveUrl(res.data.dailySongs);\r\n                        const immediate = route.query.immediate;\r\n                        if (immediate && res?.data?.dailySongs?.length) {\r\n                            store.commit(\"changeCurrentMusicDetail\", res.data.dailySongs[0]);\r\n                            store.commit(\"changeCurrentPlayList\", [\r\n                                ...JSON.parse(JSON.stringify(res.data.dailySongs)),\r\n                                ...store.state.currentPlayList,\r\n                            ]);\r\n                            store.dispatch(\"getCurrentMusicUrlInfo\", { id: res.data.dailySongs[0].id });\r\n                        }\r\n                        resolve(res);\r\n                    }\r\n                });\r\n            });\r\n        };\r\n        const getLikeList: () => Promise<AxiosResponseProps> = () => {\r\n            return new Promise((resolve, reject) => {\r\n                getLikeListApi().then((res: any) => {\r\n                    if (res.code === 200) {\r\n                        state.likeList = res.ids;\r\n                        resolve(res);\r\n                    }\r\n                });\r\n            });\r\n        };\r\n        const initPageData = () => {\r\n            getRec();\r\n            getLikeList();\r\n        };\r\n        initPageData();\r\n        const calendarColor = computed(() =>\r\n            store.getters.getTheme === \"primaryTheme\" ? \"#ec4141\" : store.getters.getTheme === \"darkTheme\" ? \"#212529\" : \"#50c475\"\r\n        );\r\n        const tryDownloadMusic = item => {\r\n            state.currentMusicObj = item;\r\n            getSongUrl(item.id).then((res: AxiosResponseProps) => {\r\n                if (res.code === 200) {\r\n                    if (res.data.length === 1) {\r\n                        state.songsUrlObjArr = res.data.map(item => ({ ...item, checked: true }));\r\n                    } else {\r\n                        state.songsUrlObjArr = res.data.map(item => ({ ...item, checked: false }));\r\n                    }\r\n                    state.downloadModalVisible = true;\r\n                }\r\n            });\r\n        };\r\n        const confirmDownload = () => {\r\n            console.log(state.songsUrlObjArr);\r\n            let findResult = state.songsUrlObjArr.find(item => item.checked);\r\n            if (findResult) {\r\n                downloadMusicFun(findResult.url, (state.currentMusicObj as { name: string }).name);\r\n            }\r\n        };\r\n        const collectMusic = (item, like) => {\r\n            likeMusic({ id: item.id, like }).then((res: any) => {\r\n                if (res.code === 200) {\r\n                    Promise.all([getRec(), getLikeList()]).then(([res1, res2]: [AxiosResponseProps, AxiosResponseProps]) => {\r\n                        if (res1.code === 200 && res2.code === 200) {\r\n                            state.commonToast.success(like ? \"已添加到我喜欢的音乐\" : \"取消喜欢成功\");\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        };\r\n        return {\r\n            ...toRefs(state),\r\n            playTime,\r\n            calendarColor,\r\n            window,\r\n            tryDownloadMusic,\r\n            musicQuality,\r\n            confirmDownload,\r\n            collectMusic,\r\n        };\r\n    },\r\n});\r\n","import { render } from \"./dailyRec.vue?vue&type=template&id=383dcf5c&scoped=true\"\nimport script from \"./dailyRec.vue?vue&type=script&lang=ts\"\nexport * from \"./dailyRec.vue?vue&type=script&lang=ts\"\n\nimport \"./dailyRec.vue?vue&type=style&index=0&id=383dcf5c&scoped=true&lang=scss\"\nscript.render = render\nscript.__scopeId = \"data-v-383dcf5c\"\n\nexport default script"],"sourceRoot":""}