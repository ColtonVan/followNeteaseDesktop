{"version":3,"sources":["webpack:///./src/views/videos.vue?888f","webpack:///./src/views/videos.vue","webpack:///./src/views/videos.vue?3fe7","webpack:///./src/views/videos.vue?d2f3"],"names":["class","navs","groupVisible","groupList","find","item","id","groupId","name","width","height","confirmGroup","visible","categoryList","key","setup","state","title","active","map","index","getCategoryListAndGroupList","then","res","code","data","concat","useClickDocument","render","__scopeId"],"mappings":"yIAAA,W,4JCCSA,MAAM,yC,GAEFA,MAAM,mF,GAKGA,MAAM,c,GAIXA,MAAM,yE,GAOVA,MAAM,6C,GACFA,MAAM,a,GACFA,MAAM,6C,GACFA,MAAM,2B,mNArB3B,eA2BM,MA3BN,EA2BM,CA1BF,eAAqC,GAAdC,KAAM,EAAAA,K,+CAAA,EAAAA,KAAI,K,iBACjC,eAcM,MAdN,EAcM,CAbF,eAMM,OALD,QAAK,+CAAO,EAAAC,cAAgB,EAAAA,eAAY,WACzCF,MAAM,iG,CAEN,eAAsF,OAAtF,EAAsF,eAA1D,EAAAG,UAAUC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,KAAO,EAAAC,WAASC,MAAI,GAC5E,eAAiG,GAAjFC,MAAM,KAAKC,OAAO,KAAKV,MAAM,sDAEjD,eAAgH,GAA9F,UAAS,EAAAW,aAAe,QAAK,4BAAN,cAAW,WAASJ,QAAS,EAAAA,Q,kDAAA,EAAAA,QAAO,IAAUK,QAAS,EAAAV,a,kDAAA,EAAAA,aAAY,K,0CAC5G,eAIM,MAJN,EAIM,E,mBAHF,eAES,2BAFuC,EAAAW,cAAY,SAApBR,G,wBAAxC,eAES,QAFF,QAAK,mBAAE,EAAAE,QAAUF,EAAKC,IAAkCQ,IAAKT,EAAKC,GAAIN,MAAM,yC,eAC/EK,EAAKG,MAAI,kB,UAKrB,eAQM,MARN,EAQM,CAPF,eAMM,MANN,EAMM,CALF,eAIM,MAJN,EAIM,CAHF,eAEM,MAFN,EAEM,CADF,eAAkC,GAAfF,GAAI,EAAAC,Q,6CAAA,EAAAA,QAAO,K,sFClBvC,iBAAgB,CAC3BQ,MAD2B,WAEvB,IAAMC,EAAQ,eAAS,CACnBf,KAAM,CACF,CACIgB,MAAO,KACPC,QAAQ,GAEZ,CACID,MAAO,OAGfJ,aAAc,GACdN,QAAS,EACTL,cAAc,EACdC,UAAW,CAAC,CAAEK,KAAM,OAAQF,GAAI,MAEpCU,EAAMf,KAAOe,EAAMf,KAAKkB,KAAI,SAACd,EAAMe,GAAP,sBAAC,kBAAsBf,GAAvB,IAA6BS,IAAKM,OAC9D,IAAMC,EAA8B,WAChC,iBAAqBC,MAAK,SAACC,GACN,MAAbA,EAAIC,OACJR,EAAMH,aAAeU,EAAIE,SAGjC,iBAAkBH,MAAK,SAACC,GACH,MAAbA,EAAIC,OACJR,EAAMb,UAAY,CAAC,CAAEK,KAAM,OAAQF,GAAI,IAAKoB,OAAOH,EAAIE,WAInEJ,IACA,OAAAM,EAAA,OAAiB,WACbX,EAAMd,cAAe,KAEzB,IAAMS,EAAe,SAAAN,GACjBW,EAAMT,QAAUF,EAAKC,IAEzB,wCACO,eAAOU,IADd,IAEIL,oB,UCvCZ,EAAOiB,OAASA,EAChB,EAAOC,UAAY,kBAEJ","file":"js/chunk-776842f5.eed04d8b.js","sourcesContent":["export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./videos.vue?vue&type=style&index=0&id=8a2f7758&scoped=true&lang=scss\"","<template>\r\n    <div class=\"videos w-100 h-100 d-flex flex-column\">\r\n        <HorizontalNav v-model:navs=\"navs\" />\r\n        <div class=\"d-flex justify-content-between align-align-items-center w-100 position-relative\">\r\n            <div\r\n                @click.stop=\"groupVisible = !groupVisible\"\r\n                class=\"rounded-pill border px-3 py-2 me-5 cursor-pointer my-2 flex-shrink-0 currentGroup text-center\"\r\n            >\r\n                <span class=\"text-muted\">{{ groupList.find(item => item.id === groupId).name }}</span>\r\n                <ArrowRightIcon width=\"12\" height=\"12\" class=\"filter-invert-1 opacity-25 translate-y--10 ms-1\" />\r\n            </div>\r\n            <VideoGroupPanel @confirm=\"confirmGroup\" @click.stop v-model:groupId=\"groupId\" v-model:visible=\"groupVisible\" />\r\n            <div class=\"videoCats d-flex align-items-center justify-content-end text-ellipsis\">\r\n                <span @click=\"groupId = item.id\" v-for=\"item in categoryList\" :key=\"item.id\" class=\"videoCat hover-opacity text-secondary\">{{\r\n                    item.name\r\n                }}</span>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"flex-grow-1 overflow-scroll hideScrollBar\">\r\n            <div class=\"container\">\r\n                <div class=\"row d-flex flex-column align-items-center\">\r\n                    <div class=\"col-xxl-10 containerCol\">\r\n                        <VideoList v-model:id=\"groupId\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent, reactive, toRefs } from \"vue\";\r\nimport { getCategoryListApi, getGroupListApi } from \"@/api/video\";\r\nimport { AxiosResponseProps } from \"@/utils/request\";\r\nimport useClickDocument from \"@/hooks/useClickDocument\";\r\nexport default defineComponent({\r\n    setup() {\r\n        const state = reactive({\r\n            navs: [\r\n                {\r\n                    title: \"视频\",\r\n                    active: true,\r\n                },\r\n                {\r\n                    title: \"MV\",\r\n                },\r\n            ],\r\n            categoryList: [],\r\n            groupId: 0,\r\n            groupVisible: false,\r\n            groupList: [{ name: \"全部视频\", id: 0 }],\r\n        });\r\n        state.navs = state.navs.map((item, index) => ({ ...item, key: index }));\r\n        const getCategoryListAndGroupList = () => {\r\n            getCategoryListApi().then((res: AxiosResponseProps) => {\r\n                if (res.code === 200) {\r\n                    state.categoryList = res.data;\r\n                }\r\n            });\r\n            getGroupListApi().then((res: AxiosResponseProps) => {\r\n                if (res.code === 200) {\r\n                    state.groupList = [{ name: \"全部视频\", id: 0 }].concat(res.data);\r\n                }\r\n            });\r\n        };\r\n        getCategoryListAndGroupList();\r\n        useClickDocument(() => {\r\n            state.groupVisible = false;\r\n        });\r\n        const confirmGroup = item => {\r\n            state.groupId = item.id;\r\n        };\r\n        return {\r\n            ...toRefs(state),\r\n            confirmGroup,\r\n        };\r\n    },\r\n});\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n.videos {\r\n    .currentGroup {\r\n        min-width: 90px;\r\n        max-width: 120px;\r\n    }\r\n    .videoCats {\r\n        width: 80%;\r\n        .videoCat + .videoCat {\r\n            margin-left: 20px;\r\n        }\r\n    }\r\n}\r\n</style>\r\n","\r\nimport { defineComponent, reactive, toRefs } from \"vue\";\r\nimport { getCategoryListApi, getGroupListApi } from \"@/api/video\";\r\nimport { AxiosResponseProps } from \"@/utils/request\";\r\nimport useClickDocument from \"@/hooks/useClickDocument\";\r\nexport default defineComponent({\r\n    setup() {\r\n        const state = reactive({\r\n            navs: [\r\n                {\r\n                    title: \"视频\",\r\n                    active: true,\r\n                },\r\n                {\r\n                    title: \"MV\",\r\n                },\r\n            ],\r\n            categoryList: [],\r\n            groupId: 0,\r\n            groupVisible: false,\r\n            groupList: [{ name: \"全部视频\", id: 0 }],\r\n        });\r\n        state.navs = state.navs.map((item, index) => ({ ...item, key: index }));\r\n        const getCategoryListAndGroupList = () => {\r\n            getCategoryListApi().then((res: AxiosResponseProps) => {\r\n                if (res.code === 200) {\r\n                    state.categoryList = res.data;\r\n                }\r\n            });\r\n            getGroupListApi().then((res: AxiosResponseProps) => {\r\n                if (res.code === 200) {\r\n                    state.groupList = [{ name: \"全部视频\", id: 0 }].concat(res.data);\r\n                }\r\n            });\r\n        };\r\n        getCategoryListAndGroupList();\r\n        useClickDocument(() => {\r\n            state.groupVisible = false;\r\n        });\r\n        const confirmGroup = item => {\r\n            state.groupId = item.id;\r\n        };\r\n        return {\r\n            ...toRefs(state),\r\n            confirmGroup,\r\n        };\r\n    },\r\n});\r\n","import { render } from \"./videos.vue?vue&type=template&id=8a2f7758&scoped=true\"\nimport script from \"./videos.vue?vue&type=script&lang=ts\"\nexport * from \"./videos.vue?vue&type=script&lang=ts\"\n\nimport \"./videos.vue?vue&type=style&index=0&id=8a2f7758&scoped=true&lang=scss\"\nscript.render = render\nscript.__scopeId = \"data-v-8a2f7758\"\n\nexport default script"],"sourceRoot":""}