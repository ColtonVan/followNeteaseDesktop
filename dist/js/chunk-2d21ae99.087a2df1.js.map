{"version":3,"sources":["webpack:///./src/views/searchResultDetail.vue","webpack:///./src/views/searchResultDetail.vue?9864","webpack:///./src/views/searchResultDetail.vue?eb00"],"names":["class","navs","columns","dataSource","map","item","index","emptyText","toolBar","musicId","name","String","padStart","likedMusicList","includes","collectMusic","width","height","handleDownloadMusic","ref","components","MusicList","setup","route","store","state","title","active","keywords","query","keyword","songs","span","dataIndex","slots","customRender","render","text","join","toastRef","newV","type","then","res","code","result","dispatch","immediate","like","id","success","error","catch","err","urls","data","length","url","warn"],"mappings":"0MACSA,MAAM,a,GAQOA,MAAM,mB,GACNA,MAAM,Q,wRATxB,eAsBM,MAtBN,EAsBM,CArBF,eAA8B,GAAdC,KAAM,EAAAA,MAAI,iBAC1B,eAmBY,GAlBPC,QAAS,EAAAA,QACTC,WAAU,UAAE,EAAAA,kBAAF,aAAE,EAAYC,KAAG,SAAEC,EAAMC,GAAR,sBAAC,kBAAuBD,GAAxB,IAA4B,MAASC,OACjEC,UAAU,oB,CAECC,QAAO,gBACd,gBADoBC,EACpB,EAA6E,GADjDH,EAC5B,EAD4BA,MAAMI,EAClC,EADkCA,KAClC,MADsC,CACtC,eAA6E,OAA7E,EAA6E,eAA5CC,OAAOL,EAAQ,GAAGM,SAAQ,WAC3D,eASO,OATP,EASO,CANQ,EAAAC,eAAeC,SAASL,I,iBAKnC,eAA4G,G,MAA7FT,MAAM,iBAAyB,QAAK,mBAAE,EAAAe,cAAY,EAAQN,IAAUO,MAAM,KAAKC,OAAO,M,uCAPrG,eAME,G,MALEjB,MAAM,iBAEL,QAAK,mBAAE,EAAAe,cAAY,EAAON,IAC3BO,MAAM,KACNC,OAAO,M,uBAIf,eAAuH,GAAnG,QAAK,mBAAE,EAAAC,oBAAmB,IAAOT,EAASC,UAASV,MAAM,iBAAiBgB,MAAM,KAAKC,OAAO,M,2DAI5H,eAA8B,GAAjBE,IAAI,YAAU,W,0ICZhB,iBAAgB,CAC3BC,WAAY,CAAEC,YAAA,YACdC,MAF2B,WAGvB,IAAMC,EAAQ,iBACRC,EAAQ,iBACRC,EAAQ,eAQX,CACCxB,KAAM,CAAC,CAAEyB,MAAO,KAAMC,QAAQ,IAC9BC,SAAU,gBAAS,kBAAML,EAAMM,MAAMC,WACrCC,MAAO,GACP7B,QAAS,CACL,CACIwB,MAAO,GACPM,KAAM,EACNC,UAAW,UACXC,MAAO,CAAEC,aAAc,YAE3B,CACIT,MAAO,OACPO,UAAW,OACXD,KAAM,EACNE,MAAO,CAAEC,aAAc,SAE3B,CACIT,MAAO,KACPO,UAAW,KACXD,KAAM,EACNI,OAAQ,SAAAC,GACJ,OAAOA,EAAKjC,KAAI,SAAAC,GAAI,OAAIA,EAAKK,QAAM4B,KAAK,OAGhD,CACIZ,MAAO,KACPO,UAAW,KACXD,KAAM,EACNI,OAAQ,SAAAC,GACJ,OAAOA,EAAK3B,OAGpB,CACIgB,MAAO,KACPO,UAAW,KACXD,KAAM,EACNI,OAAQ,SAAAC,GACJ,OAAO,eAASA,MAI5BlC,WAAY,GACZU,eAAgB,gBAAS,kBAAMW,EAAMC,MAAMZ,kBAC3C0B,SAAU,eAAI,QAElB,gBACI,kBAAMd,EAAMG,WADX,yDAED,WAAMY,GAAN,qFACQA,EADR,uBAEQ,eAAe,CAAEZ,SAAUY,EAAMC,KAAM,IAAKC,KAA5C,yDAAiD,WAAOC,GAAP,oFAC5B,MAAbA,EAAIC,KADqC,gCAEhB,eAAWD,EAAIE,OAAOd,OAAS,IAFf,OAEzCN,EAAMtB,WAFmC,kDAAjD,uDAFR,SAOcqB,EAAMsB,SAAS,qBAP7B,2CAFC,sDAYD,CACIC,WAAW,IAGnB,IAAMhC,EAAe,SAACiC,EAAMC,GACxB,eAAU,CAAEA,KAAID,SACXN,KADL,yDACU,WAAOC,GAAP,oFACe,MAAbA,EAAIC,KADN,gCAEQpB,EAAMsB,SAAS,qBAFvB,OAGErB,EAAMc,SAASW,QAAQF,EAAO,aAAe,UAH/C,sBAKEvB,EAAMc,SAASY,MAAMH,EAAO,OAAS,UALvC,2CADV,uDASKI,OAAM,SAAAC,GACH5B,EAAMc,SAASY,MAAM,YAG3BjC,EAAsB,SAAC,GAAgB,IAAd+B,EAAc,EAAdA,GAAIvC,EAAU,EAAVA,KAC/B,eAAc,CAAEuC,OAAMP,MAAK,SAACC,GACxB,GAAiB,MAAbA,EAAIC,KAAc,CAClB,IAAIU,EAAOX,EAAIY,KACXD,GAAQA,EAAKE,OACb,eAAcF,EAAK,GAAGG,IAAK/C,GACtBgC,MAAK,WACFjB,EAAMc,SAASW,QAAQ,aAE1BE,OAAM,WACH3B,EAAMc,SAASmB,KAAK,WAG5BjC,EAAMc,SAASmB,KAAK,iBAKpC,wCACO,eAAOjC,IADd,IAEIV,eACAG,2BCvHZ,EAAOkB,OAAS,EAED","file":"js/chunk-2d21ae99.087a2df1.js","sourcesContent":["<template>\r\n    <div class=\"px-5 py-4\">\r\n        <HorizontalNav :navs=\"navs\" />\r\n        <musicList\r\n            :columns=\"columns\"\r\n            :dataSource=\"dataSource?.map((item, index) => ({ ...item, index: index }))\"\r\n            emptyText=\"暂无搜索结果，搜搜其他关键词吧~\"\r\n        >\r\n            <template #toolBar=\"{id:musicId,index,name}\">\r\n                <span class=\"text-muted me-3\">{{ String(index + 1).padStart(2, \"0\") }}</span>\r\n                <span class=\"me-3\">\r\n                    <LikedIcon\r\n                        class=\"cursor-pointer\"\r\n                        v-if=\"!likedMusicList.includes(musicId)\"\r\n                        @click=\"collectMusic(true, musicId)\"\r\n                        width=\"15\"\r\n                        height=\"15\"\r\n                    />\r\n                    <HaveLikedIcon class=\"cursor-pointer\" v-else @click=\"collectMusic(false, musicId)\" width=\"15\" height=\"15\" />\r\n                </span>\r\n                <DownloadMusicIcon @click=\"handleDownloadMusic({ id: musicId, name })\" class=\"cursor-pointer\" width=\"15\" height=\"15\" />\r\n            </template>\r\n        </musicList>\r\n    </div>\r\n    <CommonToast ref=\"toastRef\" />\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { computed, ComputedRef, defineComponent, reactive, ref, Ref, toRefs, watch } from \"vue\";\r\nimport { NavsProps } from \"@/components/viewParts/HorizontalNav.vue\";\r\nimport { searchApi, cloudsearchApi } from \"@/api/search\";\r\nimport { useRoute } from \"vue-router\";\r\nimport { useStore } from \"vuex\";\r\nimport MusicList, { ColumnProps } from \"@/components/viewParts/MusicList.vue\";\r\nimport { playTime, YYYYMMDD, addHaveUrl } from \"@/hooks/useFilters\";\r\nimport { likeMusic } from \"@/api/discover\";\r\nimport { downloadMusic } from \"@/utils/file\";\r\nimport { AxiosResponseProps } from \"@/utils/request\";\r\nimport { getSongUrlApi } from \"@/api/song\";\r\nexport default defineComponent({\r\n    components: { MusicList },\r\n    setup() {\r\n        const route = useRoute();\r\n        const store = useStore();\r\n        const state = reactive<{\r\n            navs: NavsProps[];\r\n            keywords: ComputedRef<string>;\r\n            songs: any[];\r\n            columns: ColumnProps[];\r\n            dataSource: any[];\r\n            likedMusicList: ComputedRef<unknown[]>;\r\n            toastRef: Ref;\r\n        }>({\r\n            navs: [{ title: \"单曲\", active: true }],\r\n            keywords: computed(() => route.query.keyword as string),\r\n            songs: [],\r\n            columns: [\r\n                {\r\n                    title: \"\",\r\n                    span: 1,\r\n                    dataIndex: \"toolBar\",\r\n                    slots: { customRender: \"toolBar\" },\r\n                },\r\n                {\r\n                    title: \"音乐标题\",\r\n                    dataIndex: \"name\",\r\n                    span: 3,\r\n                    slots: { customRender: \"name\" },\r\n                },\r\n                {\r\n                    title: \"歌手\",\r\n                    dataIndex: \"ar\",\r\n                    span: 3,\r\n                    render: text => {\r\n                        return text.map(item => item.name).join(\"、\");\r\n                    },\r\n                },\r\n                {\r\n                    title: \"专辑\",\r\n                    dataIndex: \"al\",\r\n                    span: 2,\r\n                    render: text => {\r\n                        return text.name;\r\n                    },\r\n                },\r\n                {\r\n                    title: \"时长\",\r\n                    dataIndex: \"dt\",\r\n                    span: 1,\r\n                    render: text => {\r\n                        return playTime(text);\r\n                    },\r\n                },\r\n            ],\r\n            dataSource: [],\r\n            likedMusicList: computed(() => store.state.likedMusicList),\r\n            toastRef: ref(null),\r\n        });\r\n        watch(\r\n            () => state.keywords,\r\n            async newV => {\r\n                if (newV) {\r\n                    cloudsearchApi({ keywords: newV, type: 1 }).then(async (res: any) => {\r\n                        if (res.code === 200) {\r\n                            state.dataSource = await addHaveUrl(res.result.songs || []);\r\n                        }\r\n                    });\r\n                    await store.dispatch(\"getLikedMusicList\");\r\n                }\r\n            },\r\n            {\r\n                immediate: true,\r\n            }\r\n        );\r\n        const collectMusic = (like, id) => {\r\n            likeMusic({ id, like })\r\n                .then(async (res: any) => {\r\n                    if (res.code === 200) {\r\n                        await store.dispatch(\"getLikedMusicList\");\r\n                        state.toastRef.success(like ? \"已添加到我喜欢的音乐\" : \"取消喜欢成功\");\r\n                    } else {\r\n                        state.toastRef.error(like ? \"添加失败\" : \"取消喜欢失败\");\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    state.toastRef.error(\"请求失败\");\r\n                });\r\n        };\r\n        const handleDownloadMusic = ({ id, name }) => {\r\n            getSongUrlApi({ id }).then((res: AxiosResponseProps) => {\r\n                if (res.code === 200) {\r\n                    let urls = res.data;\r\n                    if (urls && urls.length) {\r\n                        downloadMusic(urls[0].url, name)\r\n                            .then(() => {\r\n                                state.toastRef.success(\"已添加至下载\");\r\n                            })\r\n                            .catch(() => {\r\n                                state.toastRef.warn(\"下载失败\");\r\n                            });\r\n                    } else {\r\n                        state.toastRef.warn(\"获取音乐链接失败\");\r\n                    }\r\n                }\r\n            });\r\n        };\r\n        return {\r\n            ...toRefs(state),\r\n            collectMusic,\r\n            handleDownloadMusic,\r\n        };\r\n    },\r\n});\r\n</script>\r\n\r\n<style scoped lang=\"scss\"></style>\r\n","\r\nimport { computed, ComputedRef, defineComponent, reactive, ref, Ref, toRefs, watch } from \"vue\";\r\nimport { NavsProps } from \"@/components/viewParts/HorizontalNav.vue\";\r\nimport { searchApi, cloudsearchApi } from \"@/api/search\";\r\nimport { useRoute } from \"vue-router\";\r\nimport { useStore } from \"vuex\";\r\nimport MusicList, { ColumnProps } from \"@/components/viewParts/MusicList.vue\";\r\nimport { playTime, YYYYMMDD, addHaveUrl } from \"@/hooks/useFilters\";\r\nimport { likeMusic } from \"@/api/discover\";\r\nimport { downloadMusic } from \"@/utils/file\";\r\nimport { AxiosResponseProps } from \"@/utils/request\";\r\nimport { getSongUrlApi } from \"@/api/song\";\r\nexport default defineComponent({\r\n    components: { MusicList },\r\n    setup() {\r\n        const route = useRoute();\r\n        const store = useStore();\r\n        const state = reactive<{\r\n            navs: NavsProps[];\r\n            keywords: ComputedRef<string>;\r\n            songs: any[];\r\n            columns: ColumnProps[];\r\n            dataSource: any[];\r\n            likedMusicList: ComputedRef<unknown[]>;\r\n            toastRef: Ref;\r\n        }>({\r\n            navs: [{ title: \"单曲\", active: true }],\r\n            keywords: computed(() => route.query.keyword as string),\r\n            songs: [],\r\n            columns: [\r\n                {\r\n                    title: \"\",\r\n                    span: 1,\r\n                    dataIndex: \"toolBar\",\r\n                    slots: { customRender: \"toolBar\" },\r\n                },\r\n                {\r\n                    title: \"音乐标题\",\r\n                    dataIndex: \"name\",\r\n                    span: 3,\r\n                    slots: { customRender: \"name\" },\r\n                },\r\n                {\r\n                    title: \"歌手\",\r\n                    dataIndex: \"ar\",\r\n                    span: 3,\r\n                    render: text => {\r\n                        return text.map(item => item.name).join(\"、\");\r\n                    },\r\n                },\r\n                {\r\n                    title: \"专辑\",\r\n                    dataIndex: \"al\",\r\n                    span: 2,\r\n                    render: text => {\r\n                        return text.name;\r\n                    },\r\n                },\r\n                {\r\n                    title: \"时长\",\r\n                    dataIndex: \"dt\",\r\n                    span: 1,\r\n                    render: text => {\r\n                        return playTime(text);\r\n                    },\r\n                },\r\n            ],\r\n            dataSource: [],\r\n            likedMusicList: computed(() => store.state.likedMusicList),\r\n            toastRef: ref(null),\r\n        });\r\n        watch(\r\n            () => state.keywords,\r\n            async newV => {\r\n                if (newV) {\r\n                    cloudsearchApi({ keywords: newV, type: 1 }).then(async (res: any) => {\r\n                        if (res.code === 200) {\r\n                            state.dataSource = await addHaveUrl(res.result.songs || []);\r\n                        }\r\n                    });\r\n                    await store.dispatch(\"getLikedMusicList\");\r\n                }\r\n            },\r\n            {\r\n                immediate: true,\r\n            }\r\n        );\r\n        const collectMusic = (like, id) => {\r\n            likeMusic({ id, like })\r\n                .then(async (res: any) => {\r\n                    if (res.code === 200) {\r\n                        await store.dispatch(\"getLikedMusicList\");\r\n                        state.toastRef.success(like ? \"已添加到我喜欢的音乐\" : \"取消喜欢成功\");\r\n                    } else {\r\n                        state.toastRef.error(like ? \"添加失败\" : \"取消喜欢失败\");\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    state.toastRef.error(\"请求失败\");\r\n                });\r\n        };\r\n        const handleDownloadMusic = ({ id, name }) => {\r\n            getSongUrlApi({ id }).then((res: AxiosResponseProps) => {\r\n                if (res.code === 200) {\r\n                    let urls = res.data;\r\n                    if (urls && urls.length) {\r\n                        downloadMusic(urls[0].url, name)\r\n                            .then(() => {\r\n                                state.toastRef.success(\"已添加至下载\");\r\n                            })\r\n                            .catch(() => {\r\n                                state.toastRef.warn(\"下载失败\");\r\n                            });\r\n                    } else {\r\n                        state.toastRef.warn(\"获取音乐链接失败\");\r\n                    }\r\n                }\r\n            });\r\n        };\r\n        return {\r\n            ...toRefs(state),\r\n            collectMusic,\r\n            handleDownloadMusic,\r\n        };\r\n    },\r\n});\r\n","import { render } from \"./searchResultDetail.vue?vue&type=template&id=520c6aae\"\nimport script from \"./searchResultDetail.vue?vue&type=script&lang=ts\"\nexport * from \"./searchResultDetail.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}