{"version":3,"sources":["webpack:///./src/views/createdMusicList.vue","webpack:///./src/views/createdMusicList.vue?0ea7","webpack:///./src/views/createdMusicList.vue?ca09","webpack:///./src/views/createdMusicList.vue?7141"],"names":["class","style","src","playListDetail","coverImgUrl","width","height","alt","name","creator","userId","userInfo","$router","push","id","EditOutlinedIconActive","color","avatarUrl","nickname","YYYYMMDD","createTime","musicList","tracks","tags","tag","tagIndex","key","length","trackCount","playCount","description","ref","iconIsUp","showDownArrowIcon","navs","find","item","active","columns","dataSource","map","index","toolBar","musicId","String","padStart","likedMusicList","includes","collectMusic","handleDownloadMusic","components","ArrowRightIcon","setup","route","store","state","title","span","dataIndex","slots","customRender","render","text","join","commentCount","toastRef","descRef","getPlayListDetail","t","Date","now","then","res","code","playlist","scrollWidth","offsetWidth","query","immediate","warn","commit","JSON","parse","stringify","currentPlayList","dispatch","download","forEach","setTimeout","like","success","newV","urls","data","url","catch","__scopeId"],"mappings":"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","file":"js/chunk-80ee0580.76c801e9.js","sourcesContent":["<template>\r\n    <div class=\"px-5 py-4\">\r\n        <div class=\"pb-5 d-flex\">\r\n            <img :src=\"playListDetail.coverImgUrl\" width=\"190\" height=\"190\" class=\"rounded-5 me-5 coverImg\" alt=\"\" />\r\n            <div class=\"flex-grow-1\">\r\n                <div class=\"d-flex align-items-center\">\r\n                    <div class=\"MusicListTag rounded flex-center me-2\">歌单</div>\r\n                    <div class=\"fs-3 fw-bold canSelect text-ellipsis\" style=\"max-width: 400px;\">{{ playListDetail.name }}</div>\r\n                    <EditOutlinedIcon\r\n                        v-if=\"playListDetail?.creator?.userId == userInfo.userId\"\r\n                        @click=\"$router.push({ path: '/container/updateMusicList', query: { id: playListDetail.id } })\"\r\n                        @mouseover=\"EditOutlinedIconActive = true\"\r\n                        @mouseout=\"EditOutlinedIconActive = false\"\r\n                        :color=\"EditOutlinedIconActive ? '#333' : '#9a9a9a'\"\r\n                        class=\"ms-3\"\r\n                        width=\"18\"\r\n                        height=\"18\"\r\n                    />\r\n                </div>\r\n                <div class=\"d-flex align-items-center mt-2\">\r\n                    <img width=\"35\" class=\"rounded-pill me-3 cursor-pointer\" :src=\"playListDetail.creator?.avatarUrl\" alt=\"\" />\r\n                    <a class=\"me-3 cursor-pointer\">{{ playListDetail.creator?.nickname }}</a>\r\n                    <span class=\"text-muted\">{{ YYYYMMDD(playListDetail.createTime) }}创建</span>\r\n                </div>\r\n                <div class=\"mt-3\">\r\n                    <PlayAllListBtn :musicList=\"playListDetail.tracks\" />\r\n                </div>\r\n                <div class=\"mt-3 mb-1\">\r\n                    <span>标签：</span>\r\n                    <span class=\"colorA\" v-for=\"(tag, tagIndex) in playListDetail.tags\" :key=\"tagIndex\">\r\n                        <span class=\"cursor-pointer\">{{ tag }}</span>\r\n                        <span class=\"text-muted px-1\" v-if=\"tagIndex != playListDetail.tags.length - 1\">/</span>\r\n                    </span>\r\n                    <span v-if=\"!playListDetail.tags.length\" class=\"text-black-50\">无</span>\r\n                </div>\r\n                <div class=\"mb-1\">\r\n                    <span class=\"me-3\"\r\n                        >歌曲：<span class=\"text-black-50\">{{ playListDetail.trackCount }}</span></span\r\n                    >\r\n                    <span\r\n                        >播放：<span class=\"text-black-50\">{{ playCount(playListDetail.playCount) }}</span></span\r\n                    >\r\n                </div>\r\n                <div class=\"d-flex justify-content-between\" v-bind=\"{ ...(playListDetail.description ? { title: playListDetail.description } : {}) }\">\r\n                    <span class=\"d-flex align-items-start flex-grow-1\">\r\n                        <div class=\"d-flex align-items-start\">\r\n                            简介：\r\n                        </div>\r\n                        <div\r\n                            v-if=\"!playListDetail.description && playListDetail?.creator?.userId == userInfo.userId\"\r\n                            class=\"colorA cursor-pointer\"\r\n                            @click=\"$router.push({ path: '/container/updateMusicList', query: { id: playListDetail.id, desc: 'true' } })\"\r\n                        >\r\n                            添加简介\r\n                        </div>\r\n                        <div\r\n                            ref=\"descRef\"\r\n                            class=\"canSelect text-black-50\"\r\n                            style=\"word-break: break-all;\"\r\n                            :class=\"{ 'text-ellipsis': !iconIsUp, 'flex-grow-1': iconIsUp }\"\r\n                            :style=\"{ width: iconIsUp ? '0' : '400px' }\"\r\n                            v-else\r\n                        >\r\n                            {{ playListDetail.description || \"无\" }}\r\n                        </div>\r\n                    </span>\r\n                    <DownArrowIcon\r\n                        v-if=\"showDownArrowIcon\"\r\n                        @click=\"iconIsUp = !iconIsUp\"\r\n                        :class=\"{ 'rotate-180': iconIsUp }\"\r\n                        width=\"14\"\r\n                        height=\"14\"\r\n                        color=\"#6c757d\"\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <HorizontalNav v-model:navs=\"navs\" class=\"pb-2\" />\r\n        <MusicList\r\n            v-if=\"navs.find(item => item.active).key === 0\"\r\n            :columns=\"columns\"\r\n            :dataSource=\"playListDetail.tracks?.map((item, index) => ({ ...item, index: index }))\"\r\n        >\r\n            <template #toolBar=\"{id:musicId,index,name}\">\r\n                <span class=\"text-muted me-3\">{{ String(index + 1).padStart(2, \"0\") }}</span>\r\n                <span class=\"me-3\">\r\n                    <LikedIcon\r\n                        class=\"cursor-pointer\"\r\n                        v-if=\"!likedMusicList.includes(musicId)\"\r\n                        @click=\"collectMusic(true, musicId)\"\r\n                        width=\"15\"\r\n                        height=\"15\"\r\n                    />\r\n                    <HaveLikedIcon class=\"cursor-pointer\" v-else @click=\"collectMusic(false, musicId)\" width=\"15\" height=\"15\" />\r\n                </span>\r\n                <DownloadMusicIcon @click=\"handleDownloadMusic({ id: musicId, name })\" class=\"cursor-pointer\" width=\"15\" height=\"15\" />\r\n            </template>\r\n        </MusicList>\r\n    </div>\r\n    <CommonToast ref=\"toastRef\" />\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { computed, ComputedRef, defineComponent, nextTick, reactive, ref, Ref, toRefs, watch } from \"vue\";\r\nimport { getPlayListDetailApi } from \"@/api/playList\";\r\nimport { useRoute } from \"vue-router\";\r\nimport { playTime, YYYYMMDD, addHaveUrl, playCount } from \"@/hooks/useFilters\";\r\nimport { useStore } from \"vuex\";\r\nimport { likeMusic } from \"@/api/discover\";\r\nimport { ColumnProps } from \"@/components/viewParts/MusicList.vue\";\r\nimport { NavsProps } from \"@/components/viewParts/HorizontalNav.vue\";\r\nimport { downloadMusic } from \"@/utils/file\";\r\nimport { getSongUrlApi } from \"@/api/song\";\r\nimport { AxiosResponseProps } from \"@/utils/request\";\r\nimport ArrowRightIcon from \"@/components/svgIcons/ArrowRightIcon.vue\";\r\nexport default defineComponent({\r\n    components: { ArrowRightIcon },\r\n    setup() {\r\n        const route = useRoute();\r\n        const store = useStore();\r\n        const state = reactive<{\r\n            columns: ColumnProps[];\r\n            playListDetail?: object;\r\n            navs: NavsProps[];\r\n            likedMusicList: ComputedRef<unknown[]>;\r\n            toastRef: Ref;\r\n            EditOutlinedIconActive: boolean;\r\n            userInfo: ComputedRef;\r\n            iconIsUp: boolean;\r\n            descRef: Ref;\r\n            showDownArrowIcon: boolean;\r\n        }>({\r\n            columns: [\r\n                {\r\n                    title: \"\",\r\n                    span: 1,\r\n                    dataIndex: \"toolBar\",\r\n                    slots: { customRender: \"toolBar\" },\r\n                },\r\n                {\r\n                    title: \"音乐标题\",\r\n                    span: 3,\r\n                    dataIndex: \"name\",\r\n                },\r\n                {\r\n                    title: \"歌手\",\r\n                    span: 3,\r\n                    dataIndex: \"ar\",\r\n                    render: text => {\r\n                        return text.map(item => item.name).join(\"、\");\r\n                    },\r\n                },\r\n                {\r\n                    title: \"专辑\",\r\n                    span: 2,\r\n                    dataIndex: \"al\",\r\n                    render: text => {\r\n                        return text.name;\r\n                    },\r\n                },\r\n                {\r\n                    title: \"时长\",\r\n                    span: 1,\r\n                    dataIndex: \"dt\",\r\n                    render: text => {\r\n                        return playTime(text);\r\n                    },\r\n                },\r\n            ],\r\n            playListDetail: { coverImgUrl: \"https://p1.music.126.net/jWE3OEZUlwdz0ARvyQ9wWw==/109951165474121408.jpg\", tags: [] },\r\n            navs: [\r\n                {\r\n                    title: \"歌曲列表\",\r\n                    active: true,\r\n                    key: 0,\r\n                },\r\n                {\r\n                    title: computed(() => `评论(${state.playListDetail.commentCount || 0})`),\r\n                    key: 1,\r\n                },\r\n                {\r\n                    title: \"收藏者\",\r\n                    key: 2,\r\n                },\r\n            ],\r\n            likedMusicList: computed(() => store.state.likedMusicList),\r\n            toastRef: ref(null),\r\n            EditOutlinedIconActive: false,\r\n            userInfo: computed(() => store.state.userInfo),\r\n            iconIsUp: false,\r\n            descRef: ref(null),\r\n            showDownArrowIcon: false,\r\n        });\r\n        const getPlayListDetail = async id => {\r\n            getPlayListDetailApi({ id, t: Date.now() }).then(async (res: any) => {\r\n                if (res.code === 200) {\r\n                    //addHaveUrl格式化歌单，添加是否能播放的标识haveUrl，既修改原数组又返回修改后的数组\r\n                    state.playListDetail = { ...res.playlist, tracks: await addHaveUrl(res.playlist.tracks) };\r\n                    nextTick(() => {\r\n                        state.showDownArrowIcon = state.descRef.scrollWidth > state.descRef.offsetWidth;\r\n                    });\r\n                    //立即播放\r\n                    if (route.query.immediate == \"true\") {\r\n                        if (!res.playlist.tracks.length) return state.toastRef.warn(\"歌单暂无歌曲，请去添加一些吧~\");\r\n                        store.commit(\"changeCurrentMusicDetail\", res.playlist.tracks[0]);\r\n                        store.commit(\"changeCurrentPlayList\", [...JSON.parse(JSON.stringify(res.playlist.tracks)), ...store.state.currentPlayList]);\r\n                        store.dispatch(\"getCurrentMusicUrlInfo\", { id: res.playlist.tracks[0].id });\r\n                    }\r\n                    //下载全部\r\n                    if (route.query.download == \"true\") {\r\n                        if (!res.playlist.tracks.length) return state.toastRef.warn(\"歌单暂无歌曲，请添加一些再来下载吧~\");\r\n                        res.playlist.tracks.forEach((item, index) => {\r\n                            setTimeout(() => {\r\n                                handleDownloadMusic({ id: item.id, name: item.name });\r\n                            }, 60 * index);\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n            await store.dispatch(\"getLikedMusicList\");\r\n        };\r\n        const collectMusic = (like, id) => {\r\n            likeMusic({ id, like }).then(async (res: any) => {\r\n                if (res.code === 200) {\r\n                    await store.dispatch(\"getLikedMusicList\");\r\n                    state.toastRef.success(like ? \"已添加到我喜欢的音乐\" : \"取消喜欢成功\");\r\n                }\r\n            });\r\n        };\r\n        watch(\r\n            () => route.query,\r\n            newV => {\r\n                getPlayListDetail(newV.id);\r\n            },\r\n            { immediate: true }\r\n        );\r\n        const handleDownloadMusic = ({ id, name }) => {\r\n            getSongUrlApi({ id }).then((res: AxiosResponseProps) => {\r\n                if (res.code === 200) {\r\n                    let urls = res.data;\r\n                    if (urls && urls.length) {\r\n                        downloadMusic(urls[0].url, name)\r\n                            .then(() => {\r\n                                state.toastRef.success(\"已添加至下载\");\r\n                            })\r\n                            .catch(() => {\r\n                                state.toastRef.warn(\"下载失败\");\r\n                            });\r\n                    } else {\r\n                        state.toastRef.warn(\"获取音乐链接失败\");\r\n                    }\r\n                }\r\n            });\r\n        };\r\n        return {\r\n            ...toRefs(state),\r\n            YYYYMMDD,\r\n            collectMusic,\r\n            handleDownloadMusic,\r\n            playCount,\r\n        };\r\n    },\r\n});\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n.coverImg {\r\n    object-fit: cover;\r\n}\r\n.MusicListTag {\r\n    height: 18px;\r\n    width: 32px;\r\n}\r\n.primaryTheme {\r\n    .MusicListTag {\r\n        border: 1px solid $primary;\r\n        color: $primary;\r\n    }\r\n}\r\n.darkTheme {\r\n    .MusicListTag {\r\n        border: 1px solid $dark;\r\n        color: $dark;\r\n    }\r\n}\r\n.freeTheme {\r\n    .MusicListTag {\r\n        border: 1px solid $free;\r\n        color: $free;\r\n    }\r\n}\r\n</style>\r\n","\r\nimport { computed, ComputedRef, defineComponent, nextTick, reactive, ref, Ref, toRefs, watch } from \"vue\";\r\nimport { getPlayListDetailApi } from \"@/api/playList\";\r\nimport { useRoute } from \"vue-router\";\r\nimport { playTime, YYYYMMDD, addHaveUrl, playCount } from \"@/hooks/useFilters\";\r\nimport { useStore } from \"vuex\";\r\nimport { likeMusic } from \"@/api/discover\";\r\nimport { ColumnProps } from \"@/components/viewParts/MusicList.vue\";\r\nimport { NavsProps } from \"@/components/viewParts/HorizontalNav.vue\";\r\nimport { downloadMusic } from \"@/utils/file\";\r\nimport { getSongUrlApi } from \"@/api/song\";\r\nimport { AxiosResponseProps } from \"@/utils/request\";\r\nimport ArrowRightIcon from \"@/components/svgIcons/ArrowRightIcon.vue\";\r\nexport default defineComponent({\r\n    components: { ArrowRightIcon },\r\n    setup() {\r\n        const route = useRoute();\r\n        const store = useStore();\r\n        const state = reactive<{\r\n            columns: ColumnProps[];\r\n            playListDetail?: object;\r\n            navs: NavsProps[];\r\n            likedMusicList: ComputedRef<unknown[]>;\r\n            toastRef: Ref;\r\n            EditOutlinedIconActive: boolean;\r\n            userInfo: ComputedRef;\r\n            iconIsUp: boolean;\r\n            descRef: Ref;\r\n            showDownArrowIcon: boolean;\r\n        }>({\r\n            columns: [\r\n                {\r\n                    title: \"\",\r\n                    span: 1,\r\n                    dataIndex: \"toolBar\",\r\n                    slots: { customRender: \"toolBar\" },\r\n                },\r\n                {\r\n                    title: \"音乐标题\",\r\n                    span: 3,\r\n                    dataIndex: \"name\",\r\n                },\r\n                {\r\n                    title: \"歌手\",\r\n                    span: 3,\r\n                    dataIndex: \"ar\",\r\n                    render: text => {\r\n                        return text.map(item => item.name).join(\"、\");\r\n                    },\r\n                },\r\n                {\r\n                    title: \"专辑\",\r\n                    span: 2,\r\n                    dataIndex: \"al\",\r\n                    render: text => {\r\n                        return text.name;\r\n                    },\r\n                },\r\n                {\r\n                    title: \"时长\",\r\n                    span: 1,\r\n                    dataIndex: \"dt\",\r\n                    render: text => {\r\n                        return playTime(text);\r\n                    },\r\n                },\r\n            ],\r\n            playListDetail: { coverImgUrl: \"https://p1.music.126.net/jWE3OEZUlwdz0ARvyQ9wWw==/109951165474121408.jpg\", tags: [] },\r\n            navs: [\r\n                {\r\n                    title: \"歌曲列表\",\r\n                    active: true,\r\n                    key: 0,\r\n                },\r\n                {\r\n                    title: computed(() => `评论(${state.playListDetail.commentCount || 0})`),\r\n                    key: 1,\r\n                },\r\n                {\r\n                    title: \"收藏者\",\r\n                    key: 2,\r\n                },\r\n            ],\r\n            likedMusicList: computed(() => store.state.likedMusicList),\r\n            toastRef: ref(null),\r\n            EditOutlinedIconActive: false,\r\n            userInfo: computed(() => store.state.userInfo),\r\n            iconIsUp: false,\r\n            descRef: ref(null),\r\n            showDownArrowIcon: false,\r\n        });\r\n        const getPlayListDetail = async id => {\r\n            getPlayListDetailApi({ id, t: Date.now() }).then(async (res: any) => {\r\n                if (res.code === 200) {\r\n                    //addHaveUrl格式化歌单，添加是否能播放的标识haveUrl，既修改原数组又返回修改后的数组\r\n                    state.playListDetail = { ...res.playlist, tracks: await addHaveUrl(res.playlist.tracks) };\r\n                    nextTick(() => {\r\n                        state.showDownArrowIcon = state.descRef.scrollWidth > state.descRef.offsetWidth;\r\n                    });\r\n                    //立即播放\r\n                    if (route.query.immediate == \"true\") {\r\n                        if (!res.playlist.tracks.length) return state.toastRef.warn(\"歌单暂无歌曲，请去添加一些吧~\");\r\n                        store.commit(\"changeCurrentMusicDetail\", res.playlist.tracks[0]);\r\n                        store.commit(\"changeCurrentPlayList\", [...JSON.parse(JSON.stringify(res.playlist.tracks)), ...store.state.currentPlayList]);\r\n                        store.dispatch(\"getCurrentMusicUrlInfo\", { id: res.playlist.tracks[0].id });\r\n                    }\r\n                    //下载全部\r\n                    if (route.query.download == \"true\") {\r\n                        if (!res.playlist.tracks.length) return state.toastRef.warn(\"歌单暂无歌曲，请添加一些再来下载吧~\");\r\n                        res.playlist.tracks.forEach((item, index) => {\r\n                            setTimeout(() => {\r\n                                handleDownloadMusic({ id: item.id, name: item.name });\r\n                            }, 60 * index);\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n            await store.dispatch(\"getLikedMusicList\");\r\n        };\r\n        const collectMusic = (like, id) => {\r\n            likeMusic({ id, like }).then(async (res: any) => {\r\n                if (res.code === 200) {\r\n                    await store.dispatch(\"getLikedMusicList\");\r\n                    state.toastRef.success(like ? \"已添加到我喜欢的音乐\" : \"取消喜欢成功\");\r\n                }\r\n            });\r\n        };\r\n        watch(\r\n            () => route.query,\r\n            newV => {\r\n                getPlayListDetail(newV.id);\r\n            },\r\n            { immediate: true }\r\n        );\r\n        const handleDownloadMusic = ({ id, name }) => {\r\n            getSongUrlApi({ id }).then((res: AxiosResponseProps) => {\r\n                if (res.code === 200) {\r\n                    let urls = res.data;\r\n                    if (urls && urls.length) {\r\n                        downloadMusic(urls[0].url, name)\r\n                            .then(() => {\r\n                                state.toastRef.success(\"已添加至下载\");\r\n                            })\r\n                            .catch(() => {\r\n                                state.toastRef.warn(\"下载失败\");\r\n                            });\r\n                    } else {\r\n                        state.toastRef.warn(\"获取音乐链接失败\");\r\n                    }\r\n                }\r\n            });\r\n        };\r\n        return {\r\n            ...toRefs(state),\r\n            YYYYMMDD,\r\n            collectMusic,\r\n            handleDownloadMusic,\r\n            playCount,\r\n        };\r\n    },\r\n});\r\n","import { render } from \"./createdMusicList.vue?vue&type=template&id=2fb59488&scoped=true\"\nimport script from \"./createdMusicList.vue?vue&type=script&lang=ts\"\nexport * from \"./createdMusicList.vue?vue&type=script&lang=ts\"\n\nimport \"./createdMusicList.vue?vue&type=style&index=0&id=2fb59488&scoped=true&lang=scss\"\nscript.render = render\nscript.__scopeId = \"data-v-2fb59488\"\n\nexport default script","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./createdMusicList.vue?vue&type=style&index=0&id=2fb59488&scoped=true&lang=scss\""],"sourceRoot":""}