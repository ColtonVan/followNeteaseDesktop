{"version":3,"sources":["webpack:///./src/views/createdMusicList.vue?dfe6","webpack:///./src/views/createdMusicList.vue","webpack:///./src/views/createdMusicList.vue?8c09","webpack:///./src/views/createdMusicList.vue?3141"],"names":["class","style","src","playListDetail","coverImgUrl","width","alt","name","creator","avatarUrl","nickname","YYYYMMDD","createTime","musicList","tracks","trackCount","playCount","navs","find","item","active","key","columns","dataSource","map","index","toolBar","musicId","String","padStart","likedMusicList","includes","collectMusic","height","handleDownloadMusic","ref","setup","route","store","state","title","span","dataIndex","slots","customRender","render","text","join","commentCount","toastRef","getPlayListDetail","id","t","Date","now","then","res","code","playlist","dispatch","like","success","query","newV","immediate","urls","data","length","url","catch","warn","__scopeId"],"mappings":"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","file":"js/chunk-61b43b4d.3cda528c.js","sourcesContent":["export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./createdMusicList.vue?vue&type=style&index=0&id=77605732&scoped=true&lang=scss\"","<template>\r\n    <div class=\"pb-5 d-flex\">\r\n        <img :src=\"playListDetail.coverImgUrl\" width=\"190\" class=\"rounded-5 me-5\" alt=\"\" />\r\n        <div class=\"flex-grow-1\">\r\n            <div class=\"d-flex align-items-center\">\r\n                <div class=\"MusicListTag rounded flex-center me-2\">歌单</div>\r\n                <div class=\"fs-3 fw-bold canSelect text-ellipsis flex-grow-1\" style=\"width: 0;\">{{ playListDetail.name }}</div>\r\n            </div>\r\n            <div class=\"d-flex align-items-center mt-3\">\r\n                <img width=\"35\" class=\"rounded-pill me-3 cursor-pointer\" :src=\"playListDetail.creator?.avatarUrl\" alt=\"\" />\r\n                <a class=\"me-3 cursor-pointer\">{{ playListDetail.creator?.nickname }}</a>\r\n                <span class=\"text-muted\">{{ YYYYMMDD(playListDetail.createTime) }}创建</span>\r\n            </div>\r\n            <div class=\"mt-4\">\r\n                <PlayAllListBtn :musicList=\"playListDetail.tracks\" />\r\n            </div>\r\n            <div class=\"mt-4\">\r\n                <span class=\"me-3\"\r\n                    >歌曲：<span class=\"text-black-50\">{{ playListDetail.trackCount }}</span></span\r\n                >\r\n                <span\r\n                    >播放：<span class=\"text-black-50\">{{ playListDetail.playCount }}</span></span\r\n                >\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <HorizontalNav v-model:navs=\"navs\" class=\"pb-2\" />\r\n    <MusicList\r\n        v-if=\"navs.find(item => item.active).key === 0\"\r\n        :columns=\"columns\"\r\n        :dataSource=\"playListDetail.tracks?.map((item, index) => ({ ...item, index: index }))\"\r\n    >\r\n        <template #toolBar=\"{id:musicId,index,name}\">\r\n            <span class=\"text-muted me-3\">{{ String(index + 1).padStart(2, \"0\") }}</span>\r\n            <span class=\"me-3\">\r\n                <LikedIcon\r\n                    class=\"cursor-pointer\"\r\n                    v-if=\"!likedMusicList.includes(musicId)\"\r\n                    @click=\"collectMusic(true, musicId)\"\r\n                    width=\"15\"\r\n                    height=\"15\"\r\n                />\r\n                <HaveLikedIcon class=\"cursor-pointer\" v-else @click=\"collectMusic(false, musicId)\" width=\"15\" height=\"15\" />\r\n            </span>\r\n            <DownloadMusicIcon @click=\"handleDownloadMusic({ id: musicId, name })\" class=\"cursor-pointer\" width=\"15\" height=\"15\" />\r\n        </template>\r\n    </MusicList>\r\n    <CommonToast ref=\"toastRef\" />\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { computed, ComputedRef, defineComponent, reactive, ref, Ref, toRefs, watch } from \"vue\";\r\nimport { getPlayListDetailApi } from \"@/api/playList\";\r\nimport { useRoute } from \"vue-router\";\r\nimport { playTime, YYYYMMDD, addHaveUrl } from \"@/hooks/useFilters\";\r\nimport { useStore } from \"vuex\";\r\nimport { likeMusic } from \"@/api/discover\";\r\nimport { ColumnProps } from \"@/components/viewParts/MusicList.vue\";\r\nimport { NavsProps } from \"@/components/viewParts/HorizontalNav.vue\";\r\nimport { downloadMusic } from \"@/utils/file\";\r\nimport { getSongUrlApi } from \"@/api/song\";\r\nimport { AxiosResponseProps } from \"@/utils/request\";\r\nexport default defineComponent({\r\n    setup() {\r\n        const route = useRoute();\r\n        const store = useStore();\r\n        const state = reactive<{\r\n            columns: ColumnProps[];\r\n            playListDetail?: object;\r\n            navs: NavsProps[];\r\n            likedMusicList: ComputedRef<unknown[]>;\r\n            toastRef: Ref;\r\n        }>({\r\n            columns: [\r\n                {\r\n                    title: \"\",\r\n                    span: 1,\r\n                    dataIndex: \"toolBar\",\r\n                    slots: { customRender: \"toolBar\" },\r\n                },\r\n                {\r\n                    title: \"音乐标题\",\r\n                    span: 3,\r\n                    dataIndex: \"name\",\r\n                },\r\n                {\r\n                    title: \"歌手\",\r\n                    span: 3,\r\n                    dataIndex: \"ar\",\r\n                    render: text => {\r\n                        return text.map(item => item.name).join(\"、\");\r\n                    },\r\n                },\r\n                {\r\n                    title: \"专辑\",\r\n                    span: 2,\r\n                    dataIndex: \"al\",\r\n                    render: text => {\r\n                        return text.name;\r\n                    },\r\n                },\r\n                {\r\n                    title: \"时长\",\r\n                    span: 1,\r\n                    dataIndex: \"dt\",\r\n                    render: text => {\r\n                        return playTime(text);\r\n                    },\r\n                },\r\n            ],\r\n            playListDetail: { coverImgUrl: \"https://p1.music.126.net/jWE3OEZUlwdz0ARvyQ9wWw==/109951165474121408.jpg\" },\r\n            navs: [\r\n                {\r\n                    title: \"歌曲列表\",\r\n                    active: true,\r\n                    key: 0,\r\n                },\r\n                {\r\n                    title: computed(() => `评论(${state.playListDetail.commentCount || 0})`),\r\n                    key: 1,\r\n                },\r\n                {\r\n                    title: \"收藏者\",\r\n                    key: 2,\r\n                },\r\n            ],\r\n            likedMusicList: computed(() => store.state.likedMusicList),\r\n            toastRef: ref(null),\r\n        });\r\n\r\n        const getPlayListDetail = async id => {\r\n            getPlayListDetailApi({ id, t: Date.now() }).then(async (res: any) => {\r\n                if (res.code === 200) {\r\n                    state.playListDetail = { ...res.playlist, tracks: await addHaveUrl(res.playlist.tracks) };\r\n                }\r\n            });\r\n            await store.dispatch(\"getLikedMusicList\");\r\n        };\r\n        const collectMusic = (like, id) => {\r\n            likeMusic({ id, like }).then(async (res: any) => {\r\n                if (res.code === 200) {\r\n                    await store.dispatch(\"getLikedMusicList\");\r\n                    state.toastRef.success(like ? \"已添加到我喜欢的音乐\" : \"取消喜欢成功\");\r\n                }\r\n            });\r\n        };\r\n        watch(\r\n            () => route.query.id,\r\n            newV => {\r\n                getPlayListDetail(newV);\r\n            },\r\n            { immediate: true }\r\n        );\r\n        const handleDownloadMusic = ({ id, name }) => {\r\n            getSongUrlApi({ id }).then((res: AxiosResponseProps) => {\r\n                if (res.code === 200) {\r\n                    let urls = res.data;\r\n                    if (urls && urls.length) {\r\n                        downloadMusic(urls[0].url, name)\r\n                            .then(() => {\r\n                                state.toastRef.success(\"已添加至下载\");\r\n                            })\r\n                            .catch(() => {\r\n                                state.toastRef.warn(\"下载失败\");\r\n                            });\r\n                    } else {\r\n                        state.toastRef.warn(\"获取音乐链接失败\");\r\n                    }\r\n                }\r\n            });\r\n        };\r\n        return {\r\n            ...toRefs(state),\r\n            YYYYMMDD,\r\n            collectMusic,\r\n            handleDownloadMusic,\r\n        };\r\n    },\r\n});\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n.MusicListTag {\r\n    height: 18px;\r\n    width: 32px;\r\n}\r\n.primaryTheme {\r\n    .MusicListTag {\r\n        border: 1px solid $primary;\r\n        color: $primary;\r\n    }\r\n}\r\n.darkTheme {\r\n    .MusicListTag {\r\n        border: 1px solid $dark;\r\n        color: $dark;\r\n    }\r\n}\r\n.freeTheme {\r\n    .MusicListTag {\r\n        border: 1px solid $free;\r\n        color: $free;\r\n    }\r\n}\r\n</style>\r\n","\r\nimport { computed, ComputedRef, defineComponent, reactive, ref, Ref, toRefs, watch } from \"vue\";\r\nimport { getPlayListDetailApi } from \"@/api/playList\";\r\nimport { useRoute } from \"vue-router\";\r\nimport { playTime, YYYYMMDD, addHaveUrl } from \"@/hooks/useFilters\";\r\nimport { useStore } from \"vuex\";\r\nimport { likeMusic } from \"@/api/discover\";\r\nimport { ColumnProps } from \"@/components/viewParts/MusicList.vue\";\r\nimport { NavsProps } from \"@/components/viewParts/HorizontalNav.vue\";\r\nimport { downloadMusic } from \"@/utils/file\";\r\nimport { getSongUrlApi } from \"@/api/song\";\r\nimport { AxiosResponseProps } from \"@/utils/request\";\r\nexport default defineComponent({\r\n    setup() {\r\n        const route = useRoute();\r\n        const store = useStore();\r\n        const state = reactive<{\r\n            columns: ColumnProps[];\r\n            playListDetail?: object;\r\n            navs: NavsProps[];\r\n            likedMusicList: ComputedRef<unknown[]>;\r\n            toastRef: Ref;\r\n        }>({\r\n            columns: [\r\n                {\r\n                    title: \"\",\r\n                    span: 1,\r\n                    dataIndex: \"toolBar\",\r\n                    slots: { customRender: \"toolBar\" },\r\n                },\r\n                {\r\n                    title: \"音乐标题\",\r\n                    span: 3,\r\n                    dataIndex: \"name\",\r\n                },\r\n                {\r\n                    title: \"歌手\",\r\n                    span: 3,\r\n                    dataIndex: \"ar\",\r\n                    render: text => {\r\n                        return text.map(item => item.name).join(\"、\");\r\n                    },\r\n                },\r\n                {\r\n                    title: \"专辑\",\r\n                    span: 2,\r\n                    dataIndex: \"al\",\r\n                    render: text => {\r\n                        return text.name;\r\n                    },\r\n                },\r\n                {\r\n                    title: \"时长\",\r\n                    span: 1,\r\n                    dataIndex: \"dt\",\r\n                    render: text => {\r\n                        return playTime(text);\r\n                    },\r\n                },\r\n            ],\r\n            playListDetail: { coverImgUrl: \"https://p1.music.126.net/jWE3OEZUlwdz0ARvyQ9wWw==/109951165474121408.jpg\" },\r\n            navs: [\r\n                {\r\n                    title: \"歌曲列表\",\r\n                    active: true,\r\n                    key: 0,\r\n                },\r\n                {\r\n                    title: computed(() => `评论(${state.playListDetail.commentCount || 0})`),\r\n                    key: 1,\r\n                },\r\n                {\r\n                    title: \"收藏者\",\r\n                    key: 2,\r\n                },\r\n            ],\r\n            likedMusicList: computed(() => store.state.likedMusicList),\r\n            toastRef: ref(null),\r\n        });\r\n\r\n        const getPlayListDetail = async id => {\r\n            getPlayListDetailApi({ id, t: Date.now() }).then(async (res: any) => {\r\n                if (res.code === 200) {\r\n                    state.playListDetail = { ...res.playlist, tracks: await addHaveUrl(res.playlist.tracks) };\r\n                }\r\n            });\r\n            await store.dispatch(\"getLikedMusicList\");\r\n        };\r\n        const collectMusic = (like, id) => {\r\n            likeMusic({ id, like }).then(async (res: any) => {\r\n                if (res.code === 200) {\r\n                    await store.dispatch(\"getLikedMusicList\");\r\n                    state.toastRef.success(like ? \"已添加到我喜欢的音乐\" : \"取消喜欢成功\");\r\n                }\r\n            });\r\n        };\r\n        watch(\r\n            () => route.query.id,\r\n            newV => {\r\n                getPlayListDetail(newV);\r\n            },\r\n            { immediate: true }\r\n        );\r\n        const handleDownloadMusic = ({ id, name }) => {\r\n            getSongUrlApi({ id }).then((res: AxiosResponseProps) => {\r\n                if (res.code === 200) {\r\n                    let urls = res.data;\r\n                    if (urls && urls.length) {\r\n                        downloadMusic(urls[0].url, name)\r\n                            .then(() => {\r\n                                state.toastRef.success(\"已添加至下载\");\r\n                            })\r\n                            .catch(() => {\r\n                                state.toastRef.warn(\"下载失败\");\r\n                            });\r\n                    } else {\r\n                        state.toastRef.warn(\"获取音乐链接失败\");\r\n                    }\r\n                }\r\n            });\r\n        };\r\n        return {\r\n            ...toRefs(state),\r\n            YYYYMMDD,\r\n            collectMusic,\r\n            handleDownloadMusic,\r\n        };\r\n    },\r\n});\r\n","import { render } from \"./createdMusicList.vue?vue&type=template&id=77605732&scoped=true\"\nimport script from \"./createdMusicList.vue?vue&type=script&lang=ts\"\nexport * from \"./createdMusicList.vue?vue&type=script&lang=ts\"\n\nimport \"./createdMusicList.vue?vue&type=style&index=0&id=77605732&scoped=true&lang=scss\"\nscript.render = render\nscript.__scopeId = \"data-v-77605732\"\n\nexport default script"],"sourceRoot":""}